//
// WARDuino - WebAssembly interpreter for embedded devices.
//
//
//#include <cstdio>

#include <WARDuino.h>

#include "Arduino.h"

// volatile bool handelingInterrupt = false;
//
// unsigned char wasm[] = {
//    0x00, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00, 0x01, 0x0e, 0x03, 0x60,
//    0x01, 0x7f, 0x00, 0x60, 0x00, 0x00, 0x60, 0x02, 0x7e, 0x7f, 0x01, 0x7f,
//    0x03, 0x04, 0x03, 0x00, 0x02, 0x01, 0x04, 0x04, 0x01, 0x70, 0x00, 0x03,
//    0x05, 0x03, 0x01, 0x00, 0x01, 0x06, 0x23, 0x04, 0x7f, 0x01, 0x41, 0x00,
//    0x0b, 0x7f, 0x01, 0x41, 0x00, 0x0b, 0x7c, 0x01, 0x44, 0x00, 0x00, 0x00,
//    0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x7c, 0x01, 0x44, 0x00, 0x00, 0x00,
//    0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x07, 0x08, 0x01, 0x04, 0x6d, 0x61,
//    0x69, 0x6e, 0x00, 0x02, 0x09, 0x09, 0x01, 0x00, 0x41, 0x00, 0x0b, 0x03,
//    0x02, 0x01, 0x00, 0x0a, 0x54, 0x03, 0x02, 0x00, 0x0b, 0x39, 0x00, 0x20,
//    0x01, 0x41, 0x01, 0x4a, 0x04, 0x7f, 0x20, 0x00, 0x42, 0x01, 0x7c, 0x20,
//    0x01, 0x41, 0x01, 0x6b, 0x10, 0x01, 0x20, 0x01, 0x6c, 0x05, 0x41, 0x20,
//    0x24, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x40, 0x24,
//    0x02, 0x23, 0x00, 0x23, 0x00, 0x6a, 0x24, 0x01, 0x23, 0x02, 0x23, 0x02,
//    0xa0, 0x24, 0x03, 0x41, 0x01, 0x0b, 0x0b, 0x15, 0x01, 0x01, 0x7f, 0x41,
//    0x06, 0x21, 0x00, 0x03, 0x40, 0x42, 0x0d, 0x20, 0x00, 0x10, 0x01, 0x10,
//    0x00, 0x0c, 0x00, 0x0b, 0x0b, 0x00, 0x31, 0x04, 0x6e, 0x61, 0x6d, 0x65,
//    0x01, 0x13, 0x03, 0x00, 0x05, 0x64, 0x75, 0x6d, 0x6d, 0x79, 0x01, 0x03,
//    0x66, 0x61, 0x63, 0x02, 0x04, 0x66, 0x61, 0x63, 0x35, 0x02, 0x15, 0x03,
//    0x00, 0x01, 0x00, 0x00, 0x01, 0x02, 0x00, 0x00, 0x01, 0x00, 0x02, 0x01,
//    0x00, 0x06, 0x69, 0x6e, 0x74, 0x5f, 0x33, 0x32};
// unsigned int wasm_len = 236;

WARDuino wac;
// Module* m;

void setup(void) {
    // m = wac.load_module(wasm, wasm_len, {});
    printf("START\n\n");
    // wac.run_module(m);
    // printf("END\n\n");
    // wac.unload_module(m);
}

/*void app_main(void) {
    m = wac.load_module(wasm, wasm_len, {});
    printf("START\n\n");
    //wac.run_module(m);
    //printf("END\n\n");
    //wac.unload_module(m);
                                 while(true);
}*/

void loop() {}
