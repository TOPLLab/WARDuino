import{i as n}from"./chunks/illustration.f11271bf.js";import{o as l,c as o,J as e,C as s,a,V as p}from"./chunks/framework.34305d4c.js";const t=s("h1",{id:"analog-read-serial",tabindex:"-1"},[a("Analog Read Serial "),s("a",{class:"header-anchor",href:"#analog-read-serial","aria-label":'Permalink to "Analog Read Serial"'},"​")],-1),r=s("p",null,"This is the smallest example for WARDuino, the program shows how to read analog input from the physical world, and print it out via the serial bus.",-1),c=s("h2",{id:"circuit",tabindex:"-1"},[a("Circuit "),s("a",{class:"header-anchor",href:"#circuit","aria-label":'Permalink to "Circuit"'},"​")],-1),i=s("p",null,"We can connect a potentiometer or similar sensor to one of the I/O pins of the embedded device. With WARDuino you can measure the resistance produced by the potentiometer.",-1),F=s("p",null,"For this example you require:",-1),y=s("ol",null,[s("li",null,"A microcontroller"),s("li",null,"Potentiometer or other sensor")],-1),D=p(`<h2 id="program" tabindex="-1">Program <a class="header-anchor" href="#program" aria-label="Permalink to &quot;Program&quot;">​</a></h2><p>Read a sensor, print its state out to the serial bus.</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-TV5fG" id="tab-7CkZxHP" checked="checked"><label for="tab-7CkZxHP">AS</label><input type="radio" name="group-TV5fG" id="tab-0lTNHZX"><label for="tab-0lTNHZX">Rust</label></div><div class="blocks"><div class="language-ts active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">analogRead</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">delay</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">print</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">as-warduino/assembly</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">():</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">value</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">analogRead</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">13</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">print</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">value</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">delay</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><div class="language-rust"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">use</span><span style="color:#FFCB6B;"> warduino</span><span style="color:#89DDFF;">::{</span><span style="color:#FFCB6B;">analog_read</span><span style="color:#89DDFF;">,</span><span style="color:#FFCB6B;"> delay</span><span style="color:#89DDFF;">,</span><span style="color:#FFCB6B;"> print</span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">#[</span><span style="color:#A6ACCD;">no_mangle</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#F78C6C;">pub</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">fn</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> value</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">u32</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">analog_read</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">13</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">delay</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div></div></div>`,3),g=JSON.parse('{"title":"Analog Read Serial","description":"","frontmatter":{},"headers":[],"relativePath":"guide/examples/analog.md","filePath":"guide/examples/analog.md","lastUpdated":null}'),d={name:"guide/examples/analog.md"},_=Object.assign(d,{setup(C){return(A,u)=>(l(),o("div",null,[t,r,c,i,F,y,e(n,{src:"/images/analog-circuit.svg",darkmode:"/images/analog-circuit-dark.svg",classes:"circuit"}),D]))}});export{g as __pageData,_ as default};
