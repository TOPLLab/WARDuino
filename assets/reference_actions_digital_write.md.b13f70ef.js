import{_ as s,o as a,c as l,V as e}from"./chunks/framework.34305d4c.js";const D=JSON.parse('{"title":"Digital write ⏪","description":"","frontmatter":{},"headers":[],"relativePath":"reference/actions/digital/write.md","filePath":"reference/actions/digital/write.md","lastUpdated":null}'),t={name:"reference/actions/digital/write.md"},n=e(`<h1 id="digital-write-⏪" tabindex="-1">Digital write ⏪ <a class="header-anchor" href="#digital-write-⏪" aria-label="Permalink to &quot;Digital write ⏪&quot;">​</a></h1><p>This action changes changes the signal of a digital I/O pin to either <code>LOW</code> or <code>HIGH</code>.</p><hr><table><thead><tr><th style="text-align:left;"></th><th style="text-align:center;">Emulator</th><th style="text-align:center;">Arduino</th><th style="text-align:center;">ESP IDF</th><th style="text-align:center;">Zephyr</th></tr></thead><tbody><tr><td style="text-align:left;">Support</td><td style="text-align:center;">⏪</td><td style="text-align:center;">✅</td><td style="text-align:center;">✅</td><td style="text-align:center;">⏪</td></tr></tbody></table><h2 id="interface" tabindex="-1">Interface <a class="header-anchor" href="#interface" aria-label="Permalink to &quot;Interface&quot;">​</a></h2><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-_OJvY" id="tab-ktulUmW" checked="checked"><label for="tab-ktulUmW">WebAssembly</label><input type="radio" name="group-_OJvY" id="tab-NdoAiUl"><label for="tab-NdoAiUl">AS</label><input type="radio" name="group-_OJvY" id="tab-5ThDQ_F"><label for="tab-5ThDQ_F">Rust</label></div><div class="blocks"><div class="language-wasm active"><button title="Copy Code" class="copy"></button><span class="lang">wasm</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">(</span><span style="color:#FFCB6B;">func</span><span style="color:#A6ACCD;"> chip_digital_write (</span><span style="color:#C792EA;">param</span><span style="color:#A6ACCD;"> $pin </span><span style="color:#FFCB6B;">i32</span><span style="color:#A6ACCD;">) (</span><span style="color:#C792EA;">param</span><span style="color:#A6ACCD;"> $value </span><span style="color:#FFCB6B;">i32</span><span style="color:#A6ACCD;">))</span></span></code></pre></div><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">digitalWrite</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">pin</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">i32</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">value</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">PinVoltage</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">void</span></span></code></pre></div><div class="language-rust"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">fn</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">digital_write</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">pin</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">u32</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> value</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">PinVoltage</span><span style="color:#89DDFF;">)</span></span></code></pre></div></div></div><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="webassembly" tabindex="-1">WebAssembly <a class="header-anchor" href="#webassembly" aria-label="Permalink to &quot;WebAssembly&quot;">​</a></h3><ul><li><strong>pin</strong>: must be a valid I/O pin number of the microcontroller</li><li><strong>value</strong>: either 0 (low) or 1 (high)</li></ul><h3 id="assemblyscript" tabindex="-1">AssemblyScript <a class="header-anchor" href="#assemblyscript" aria-label="Permalink to &quot;AssemblyScript&quot;">​</a></h3><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">enum</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">PinVoltage</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">/** Low voltage on a digital I/O pin */</span></span>
<span class="line"><span style="color:#A6ACCD;">    LOW  </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">/** High voltage on a digital I/O pin */</span></span>
<span class="line"><span style="color:#A6ACCD;">    HIGH </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="rust" tabindex="-1">Rust <a class="header-anchor" href="#rust" aria-label="Permalink to &quot;Rust&quot;">​</a></h3><div class="language-rust"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">enum</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">PinVoltage</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">/** Low voltage on a digital I/O pin */</span></span>
<span class="line"><span style="color:#A6ACCD;">    LOW  </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">/** High voltage on a digital I/O pin */</span></span>
<span class="line"><span style="color:#A6ACCD;">    HIGH </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div>`,13),o=[n];function p(r,i,c,y,d,C){return a(),l("div",null,o)}const h=s(t,[["render",p]]);export{D as __pageData,h as default};
