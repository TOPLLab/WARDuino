import{_ as s,o as a,c as n,V as e}from"./chunks/framework.34305d4c.js";const A=JSON.parse('{"title":"Pin mode ⏪","description":"","frontmatter":{},"headers":[],"relativePath":"reference/actions/digital/mode.md","filePath":"reference/actions/digital/mode.md","lastUpdated":null}'),l={name:"reference/actions/digital/mode.md"},t=e(`<h1 id="pin-mode-⏪" tabindex="-1">Pin mode ⏪ <a class="header-anchor" href="#pin-mode-⏪" aria-label="Permalink to &quot;Pin mode ⏪&quot;">​</a></h1><p>This action changes the mode of a digital I/O pin to either <code>INPUT</code> or <code>OUTPUT</code>.</p><hr><table><thead><tr><th style="text-align:left;"></th><th style="text-align:center;">Emulator</th><th style="text-align:center;">Arduino</th><th style="text-align:center;">ESP IDF</th><th style="text-align:center;">Zephyr</th></tr></thead><tbody><tr><td style="text-align:left;">Support</td><td style="text-align:center;">⏪</td><td style="text-align:center;">✅</td><td style="text-align:center;">✅</td><td style="text-align:center;">⏪</td></tr></tbody></table><h2 id="interface" tabindex="-1">Interface <a class="header-anchor" href="#interface" aria-label="Permalink to &quot;Interface&quot;">​</a></h2><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-UD37x" id="tab-NDwQ553" checked="checked"><label for="tab-NDwQ553">WebAssembly</label><input type="radio" name="group-UD37x" id="tab-nxnoY1E"><label for="tab-nxnoY1E">AS</label><input type="radio" name="group-UD37x" id="tab-C1L2_Dv"><label for="tab-C1L2_Dv">Rust</label></div><div class="blocks"><div class="language-wasm active"><button title="Copy Code" class="copy"></button><span class="lang">wasm</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">(</span><span style="color:#FFCB6B;">func</span><span style="color:#A6ACCD;"> chip_pin_mode (</span><span style="color:#C792EA;">param</span><span style="color:#A6ACCD;"> $pin </span><span style="color:#FFCB6B;">i32</span><span style="color:#A6ACCD;">) (</span><span style="color:#C792EA;">param</span><span style="color:#A6ACCD;"> $mode </span><span style="color:#FFCB6B;">i32</span><span style="color:#A6ACCD;">))</span></span></code></pre></div><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">pinMode</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">pin</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">i32</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">mode</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">PinMode</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">void</span></span></code></pre></div><div class="language-rust"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">fn</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">pin_mode</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">pin</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">u32</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> mode</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">PinMode</span><span style="color:#89DDFF;">)</span></span></code></pre></div></div></div><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="webassembly" tabindex="-1">WebAssembly <a class="header-anchor" href="#webassembly" aria-label="Permalink to &quot;WebAssembly&quot;">​</a></h3><ul><li><strong>pin</strong>: must be a valid I/O pin number of the microcontroller</li><li><strong>mode</strong>: either 0 (input) or 2 (output)</li></ul><h3 id="assemblyscript" tabindex="-1">AssemblyScript <a class="header-anchor" href="#assemblyscript" aria-label="Permalink to &quot;AssemblyScript&quot;">​</a></h3><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">enum</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">PinMode</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">/** Input mode for digital pins */</span></span>
<span class="line"><span style="color:#A6ACCD;">    INPUT  </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0x0</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">/** Output mode for digital pins */</span></span>
<span class="line"><span style="color:#A6ACCD;">    OUTPUT </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0x2</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="rust" tabindex="-1">Rust <a class="header-anchor" href="#rust" aria-label="Permalink to &quot;Rust&quot;">​</a></h3><div class="language-rust"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">enum</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">PinMode</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">/** Input mode for digital pins */</span></span>
<span class="line"><span style="color:#A6ACCD;">    INPUT  </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0x0</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">/** Output mode for digital pins */</span></span>
<span class="line"><span style="color:#A6ACCD;">    OUTPUT </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0x2</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div>`,13),o=[t];function p(r,c,i,d,y,C){return a(),n("div",null,o)}const h=s(l,[["render",p]]);export{A as __pageData,h as default};
