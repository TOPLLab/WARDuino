import{_ as e,o as t,c as o,V as a}from"./chunks/framework.34305d4c.js";const f=JSON.parse('{"title":"Debugging on Hardware","description":"","frontmatter":{},"headers":[],"relativePath":"guide/plugin/tutorial.md","filePath":"guide/plugin/tutorial.md","lastUpdated":null}'),n={name:"guide/plugin/tutorial.md"},i=a('<h1 id="debugging-on-hardware" tabindex="-1">Debugging on Hardware <a class="header-anchor" href="#debugging-on-hardware" aria-label="Permalink to &quot;Debugging on Hardware&quot;">â€‹</a></h1><p>You can access the settings for the WARDuino debugger, by opening the settings window of VS Code and typing <em>&quot;warduino&quot;</em> in the search input area. To enable debugging on the physical board set the <code>WARDuino: Debug Mode</code> configuration value to <code>embedded</code>.</p><p>Now the plugin needs to know to what device to connect to. Set the right address for the serial port in the <code>WARDuino: Port</code> field, and the FQBN of the target hardware in <code>WARDuino: Device</code>.</p><p>If you are using the Arduino toolchain (see <a href="/WARDuino/guide/get-started.html#arduino-toolchain-setup">arduino setup instructions</a>), you can find the FQBN value for your hardware with the <code>arduino-cli</code>.</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">arduino-cli</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">board</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">listall</span></span></code></pre></div><p>After updating these settings, you can start the debugger by navigating to the <em>Run and Debug</em> tab, and clicking on <code>Debug WARDuino</code>.</p><p>The plugin will first compile and flash your software, before starting a debugging session. Due to these initial steps, it may take a while before the debugger is connected. A popup notification will appear once the debugger is connected, and you can see the status of the plugin on the bottom right of your VS Code window at any time.</p><div class="tip custom-block"><p class="custom-block-title"><span class="icon material-symbols-rounded">menu_book</span> Find out more</p><p>Go to the technical reference for more information.</p><p><a href="/WARDuino/reference/edward/concurrency.html">-&gt; debugging concurrency tutorial</a></p><p><a href="/WARDuino/reference/debug-protocol.html">-&gt; debug protocol API</a></p><p><a href="/WARDuino/reference/plugin.html">-&gt; plugin technical reference</a></p><p><a href="/WARDuino/reference/platforms.html">-&gt; supported platforms</a></p></div>',8),r=[i];function s(c,d,l,u,p,g){return t(),o("div",null,r)}const b=e(n,[["render",s]]);export{f as __pageData,b as default};
