name: Compile
on: [push, pull_request]
jobs:
    compile-benchmarks:
        name: Check if benchmarks work
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            # Install with brew to have wasm-ld
            - name: Install Brew
              run: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
            - name: Verify Brew
              run: brew help
            - name: Install LLVM/clang
              run: brew install llvm
            - name: Verify clang
              run: clang --version
            - name: Compile benchmarks
              run: make -C benchmarks/ clean all
            - name: Run benchmarks
              run: cd benchmarks/ && ./bin/warduino_benchmark
    test-compile-on-mcus:
        name: Test compile on ${{matrix.board.platform-name }}
        runs-on: ubuntu-latest
        env:
            SKETCHES_REPORTS_PATH: sketches-reports
            SKETCHES_REPORTS_ARTIFACT_NAME: sketches-artifacts
            LIBRARIES: |
                - source-path: ./
                - name: WiFi
                - name: HTTPClient
                - name: PubSubClient
        strategy:
            fail-fast: false
            matrix:
                board:
                    - fqbn: 'esp32:esp32:esp32'
                      platform-name: esp32:esp32
                include:
                    - board:
                        platform-name: esp32:esp32
                      platforms: |
                        # Install ESP32 platform via Boards Manager
                        - name: esp32:esp32
                          source-url: https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json
                      sketches: |
                        - tests/compilation/esp32
        steps:
            - uses: actions/checkout@v2
            - name: Compile sketches
              uses: arduino/compile-sketches@v1
              with:
                  platforms: ${{ matrix.platforms }}
                  fqbn: ${{ matrix.board.fqbn }}
                  sketch-paths: |
                      ${{ matrix.sketches }}
                  libraries: |
                      ${{ env.LIBRARIES }}
    formatting-check:
        name: Formatting Check
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - name: Run clang-format style check for C/C++ programs.
              uses: jidicula/clang-format-action@v3.5.1
              with:
                clang-format-version: '11'
                check-path: '.'
                fallback-style: 'Google'
