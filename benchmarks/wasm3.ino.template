#include "Arduino.h"
#include "wasm3.h"

#define FATAL(func, msg) {           \
  Serial.print("Fatal: " func ": "); \
  Serial.println(msg); return; }

void setup()
{

  Serial.begin(115200);
  delay(10);
  while (!Serial) {}
}

void loop()
{
    // Load module
    M3Result result = m3Err_none;

    uint8_t* wasm = (uint8_t*)impl_wasm;
    size_t fsize = impl_wasm_len;

    IM3Environment env = m3_NewEnvironment ();
    if (!env) FATAL("m3_NewEnvironment", "failed");

    IM3Runtime runtime = m3_NewRuntime (env, 1024, NULL);
    if (!runtime) FATAL("m3_NewRuntime", "failed");

    IM3Module module;
    result = m3_ParseModule (env, &module, wasm, fsize);
    if (result) FATAL("m3_ParseModule", result);

    result = m3_LoadModule (runtime, module);
    if (result) FATAL("m3_LoadModule", result);

    IM3Function f;
    result = m3_FindFunction (&f, runtime, "bench");
    if (result) FATAL("m3_FindFunction", result);

    // Run benchmark
    delay(1000);
    printf("START\n\n");
    for (int i = 0; i < 10; i++) {
        result = m3_CallV(f);
        if (result) FATAL("m3_Call", result);
    
        uint32_t value = 0;
        result = m3_GetResultsV (f, &value);
        if (result) FATAL("m3_GetResults: %s", result);

        printf("%d: %u\n", i, value);
    }
    m3_FreeModule(module);
    printf("DONE\n\n");
}
