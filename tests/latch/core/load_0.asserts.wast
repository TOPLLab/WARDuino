       (assert_return (invoke "as-br-value") (i32.const 0))
       (assert_return (invoke "as-br_if-cond"))
       (assert_return (invoke "as-br_if-value") (i32.const 0))
       (assert_return (invoke "as-br_if-value-cond") (i32.const 7))
       (assert_return (invoke "as-br_table-index"))
       (assert_return (invoke "as-br_table-value") (i32.const 0))
       (assert_return (invoke "as-br_table-value-index") (i32.const 6))
       (assert_return (invoke "as-return-value") (i32.const 0))
       (assert_return (invoke "as-if-cond") (i32.const 1))
       (assert_return (invoke "as-if-then") (i32.const 0))
       (assert_return (invoke "as-if-else") (i32.const 0))
       (assert_return (invoke "as-select-first" (i32.const 0) (i32.const 1)) (i32.const 0))
       (assert_return (invoke "as-select-second" (i32.const 0) (i32.const 0)) (i32.const 0))
       (assert_return (invoke "as-select-cond") (i32.const 1))
       (assert_return (invoke "as-call-first") (i32.const -1))
       (assert_return (invoke "as-call-mid") (i32.const -1))
       (assert_return (invoke "as-call-last") (i32.const -1))
       (assert_return (invoke "as-call_indirect-first") (i32.const -1))
       (assert_return (invoke "as-call_indirect-mid") (i32.const -1))
       (assert_return (invoke "as-call_indirect-last") (i32.const -1))
       (assert_return (invoke "as-call_indirect-index") (i32.const -1))
       (assert_return (invoke "as-local.set-value"))
       (assert_return (invoke "as-local.tee-value") (i32.const 0))
       (assert_return (invoke "as-global.set-value"))
       (assert_return (invoke "as-load-address") (i32.const 0))
       (assert_return (invoke "as-loadN-address") (i32.const 0))
       (assert_return (invoke "as-store-address"))
       (assert_return (invoke "as-store-value"))
       (assert_return (invoke "as-storeN-address"))
       (assert_return (invoke "as-storeN-value"))
       (assert_return (invoke "as-unary-operand") (i32.const 32))
       (assert_return (invoke "as-binary-left") (i32.const 10))
       (assert_return (invoke "as-binary-right") (i32.const 10))
       (assert_return (invoke "as-test-operand") (i32.const 1))
       (assert_return (invoke "as-compare-left") (i32.const 1))
       (assert_return (invoke "as-compare-right") (i32.const 1))
       (assert_return (invoke "as-memory.grow-size") (i32.const 1))
