       (assert_return (invoke "type-i32"))
       (assert_return (invoke "type-i64"))
       (assert_return (invoke "type-f32"))
       (assert_return (invoke "type-f64"))
       (assert_return (invoke "type-i32-value") (i32.const 1))
       (assert_return (invoke "type-i64-value") (i64.const 2))
       (assert_return (invoke "nullary"))
       (assert_return (invoke "as-func-first") (i32.const 1))
       (assert_return (invoke "as-func-mid") (i32.const 2))
       (assert_return (invoke "as-func-last"))
       (assert_return (invoke "as-func-value") (i32.const 3))
       (assert_return (invoke "as-block-first"))
       (assert_return (invoke "as-block-mid"))
       (assert_return (invoke "as-block-last"))
       (assert_return (invoke "as-block-value") (i32.const 2))
       (assert_return (invoke "as-loop-first") (i32.const 3))
       (assert_return (invoke "as-loop-mid") (i32.const 4))
       (assert_return (invoke "as-loop-last") (i32.const 5))
       (assert_return (invoke "as-br-value") (i32.const 9))
       (assert_return (invoke "as-br_if-cond"))
       (assert_return (invoke "as-br_if-value") (i32.const 8))
       (assert_return (invoke "as-br_if-value-cond") (i32.const 9))
       (assert_return (invoke "as-br_table-index") (i64.const 9))
       (assert_return (invoke "as-br_table-value") (i32.const 10))
       (assert_return (invoke "as-br_table-value-index") (i32.const 11))
       (assert_return (invoke "as-return-value") (i64.const 7))
       (assert_return (invoke "as-if-cond") (i32.const 2))
       (assert_return (invoke "as-if-then" (i32.const 1) (i32.const 6)) (i32.const 3))
       (assert_return (invoke "as-if-then" (i32.const 0) (i32.const 6)) (i32.const 6))
       (assert_return (invoke "as-if-else" (i32.const 0) (i32.const 6)) (i32.const 4))
       (assert_return (invoke "as-if-else" (i32.const 1) (i32.const 6)) (i32.const 6))
       (assert_return (invoke "as-select-first" (i32.const 0) (i32.const 6)) (i32.const 5))
       (assert_return (invoke "as-select-first" (i32.const 1) (i32.const 6)) (i32.const 5))
       (assert_return (invoke "as-select-second" (i32.const 0) (i32.const 6)) (i32.const 6))
       (assert_return (invoke "as-select-second" (i32.const 1) (i32.const 6)) (i32.const 6))
       (assert_return (invoke "as-select-cond") (i32.const 7))
       (assert_return (invoke "as-call-first") (i32.const 12))
       (assert_return (invoke "as-call-mid") (i32.const 13))
       (assert_return (invoke "as-call-last") (i32.const 14))
       (assert_return (invoke "as-call_indirect-func") (i32.const 20))
       (assert_return (invoke "as-call_indirect-first") (i32.const 21))
       (assert_return (invoke "as-call_indirect-mid") (i32.const 22))
       (assert_return (invoke "as-call_indirect-last") (i32.const 23))
       (assert_return (invoke "as-local.set-value") (i32.const 17))
       (assert_return (invoke "as-local.tee-value") (i32.const 1))
       (assert_return (invoke "as-global.set-value") (i32.const 1))
       (assert_return (invoke "as-loadN-address") (i64.const 30))
       (assert_return (invoke "as-store-address") (i32.const 30))
       (assert_return (invoke "as-store-value") (i32.const 31))
       (assert_return (invoke "as-storeN-address") (i32.const 32))
       (assert_return (invoke "as-storeN-value") (i32.const 33))
       (assert_return (invoke "as-binary-left") (i32.const 3))
       (assert_return (invoke "as-binary-right") (i64.const 45))
       (assert_return (invoke "as-test-operand") (i32.const 44))
       (assert_return (invoke "as-compare-left") (i32.const 43))
       (assert_return (invoke "as-compare-right") (i32.const 42))
       (assert_return (invoke "as-convert-operand") (i32.const 41))
       (assert_return (invoke "as-memory.grow-size") (i32.const 40))
