
> warduino-testsuite@1.0.0 spectest
> latch ./src/spec.test.ts

::group::converting /home/tom/Arduino/libraries/WARDuino/tests/latch/scp/left-to-right/
> Scanning suite: /home/tom/Arduino/libraries/WARDuino/tests/latch/scp/left-to-right/

> Building scenarios [0/1] [1/1]

> Starting framework (this may take a while)

::endgroup::

[95m    General Information[0m
[95m    ===================[0m
[95m    Platforms  [0m
[95m    VM commit  4ce14c2[0m


::group::[95mesp wrover: Specification test suite for WebAssembly%s[0m

::group::[95mesp wrover: Test: left-to-right_0.wast%s[0m
      [32m[32mâœ”[39m[0m ((invoke "i64_add") (i32.const 0x0102))
      [32m[32mâœ”[39m[0m ((invoke "i64_sub") (i32.const 0x0102))
      [32m[32mâœ”[39m[0m ((invoke "i64_mul") (i32.const 0x0102))
      [32m[32mâœ”[39m[0m ((invoke "i64_div_s") (i32.const 0x0102))
      [32m[32mâœ”[39m[0m ((invoke "i64_div_u") (i32.const 0x0102))
      [32m[32mâœ”[39m[0m ((invoke "i64_rem_s") (i32.const 0x0102))
      [32m[32mâœ”[39m[0m ((invoke "i64_rem_u") (i32.const 0x0102))
      [32m[32mâœ”[39m[0m ((invoke "i64_and") (i32.const 0x0102))
      [32m[32mâœ”[39m[0m ((invoke "i64_or") (i32.const 0x0102))
      [32m[32mâœ”[39m[0m ((invoke "i64_xor") (i32.const 0x0102))
      [32m[32mâœ”[39m[0m ((invoke "i64_shl") (i32.const 0x0102))
      [32m[32mâœ”[39m[0m ((invoke "i64_shr_u") (i32.const 0x0102))
      [32m[32mâœ”[39m[0m ((invoke "i64_shr_s") (i32.const 0x0102))
      [32m[32mâœ”[39m[0m ((invoke "i64_eq") (i32.const 0x0102))
      [32m[32mâœ”[39m[0m ((invoke "i64_ne") (i32.const 0x0102))
      [32m[32mâœ”[39m[0m ((invoke "i64_lt_s") (i32.const 0x0102))
      [32m[32mâœ”[39m[0m ((invoke "i64_le_s") (i32.const 0x0102))
      [32m[32mâœ”[39m[0m ((invoke "i64_lt_u") (i32.const 0x0102))
      [32m[32mâœ”[39m[0m ((invoke "i64_le_u") (i32.const 0x0102))
      [32m[32mâœ”[39m[0m ((invoke "i64_gt_s") (i32.const 0x0102))
      [32m[32mâœ”[39m[0m ((invoke "i64_ge_s") (i32.const 0x0102))
      [32m[32mâœ”[39m[0m ((invoke "i64_gt_u") (i32.const 0x0102))
      [32m[32mâœ”[39m[0m ((invoke "i64_ge_u") (i32.const 0x0102))
      [32m[32mâœ”[39m[0m ((invoke "i64_store") (i32.const 0x0102))
      [32m[32mâœ”[39m[0m ((invoke "i64_store8") (i32.const 0x0102))
      [32m[32mâœ”[39m[0m ((invoke "i64_store16") (i32.const 0x0102))
      [32m[32mâœ”[39m[0m ((invoke "i64_store32") (i32.const 0x0102))
      [32m[32mâœ”[39m[0m ((invoke "i64_call") (i32.const 0x0102))
      [32m[32mâœ”[39m[0m ((invoke "i32_call_indirect") (i32.const 0x010204))
      [32m[32mâœ”[39m[0m ((invoke "i64_call_indirect") (i32.const 0x010204))
      [32m[32mâœ”[39m[0m ((invoke "i64_select") (i32.const 0x010205))
      [32m[32mâœ”[39m[0m ((invoke "f64_add") (i32.const 0x0102))
      [32m[32mâœ”[39m[0m ((invoke "f64_sub") (i32.const 0x0102))
      [32m[32mâœ”[39m[0m ((invoke "f64_mul") (i32.const 0x0102))
      [32m[32mâœ”[39m[0m ((invoke "f64_div") (i32.const 0x0102))
      [32m[32mâœ”[39m[0m ((invoke "f64_copysign") (i32.const 0x0102))
      [32m[32mâœ”[39m[0m ((invoke "f64_eq") (i32.const 0x0102))
      [32m[32mâœ”[39m[0m ((invoke "f64_ne") (i32.const 0x0102))
      [32m[32mâœ”[39m[0m ((invoke "f64_lt") (i32.const 0x0102))
      [32m[32mâœ”[39m[0m ((invoke "f64_le") (i32.const 0x0102))
      [32m[32mâœ”[39m[0m ((invoke "f64_gt") (i32.const 0x0102))
      [32m[32mâœ”[39m[0m ((invoke "f64_ge") (i32.const 0x0102))
      [32m[32mâœ”[39m[0m ((invoke "f64_min") (i32.const 0x0102))
      [32m[32mâœ”[39m[0m ((invoke "f64_max") (i32.const 0x0102))
      [32m[32mâœ”[39m[0m ((invoke "f64_store") (i32.const 0x0102))
      [32m[32mâœ”[39m[0m ((invoke "f64_call") (i32.const 0x0102))
      [32m[32mâœ”[39m[0m ((invoke "f32_call_indirect") (i32.const 0x010204))
      [32m[32mâœ”[39m[0m ((invoke "f64_call_indirect") (i32.const 0x010204))
      [32m[32mâœ”[39m[0m ((invoke "f64_select") (i32.const 0x010205))
      [32m[32mâœ”[39m[0m ((invoke "br_if") (i32.const 0x0102))
      [32m[32mâœ”[39m[0m ((invoke "br_table") (i32.const 0x0102))
::endgroup::
::endgroup::
::endgroup::

[95m    Test Suite Results[0m
[95m    ==================
[0m
[95m    Scenarios:[0m
[92m      [0m[32m2 passing[0m[90m (29s)[0m
[36m      [0m[36m0 skipped[0m

[95m    Actions:[0m
[92m      [0m[32m51 passing[0m

